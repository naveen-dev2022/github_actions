on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master
      - develop
name: "Build & Release"
jobs:
  build:
    name: Build & Release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1   # This action checks out your repository's code onto the runner, allowing subsequent actions to operate on it.
      - uses: actions/setup-java@v1 # This action sets up a Java development environment on the runner, including installing the JDK specified in your workflow.
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1  # This action automates the process of building, testing, and deploying Flutter applications using GitHub Actions.
        with:
          flutter-version: '3.16.8'
      - run: flutter pub get
      - run: flutter test
      - run: flutter build apk --debug --split-per-abi
      - run: |
          flutter build ios --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app.ipa Payload
      - name: Push to Releases
        uses: ncipollo/release-action@v1  # This action facilitates the release process of software projects hosted on GitHub. It automates tasks such as tagging a release, uploading artifacts, and creating release notes.
        with:
          artifacts: "build/app/outputs/apk/debug/*,build/ios/iphoneos/app.ipa"
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.TOKEN }}






# push to master, main, develop
# pull request on main master